{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Counter/index.js","components/Shaker/index.js","App.js","index.js"],"names":["FriendCard","props","id","image","className","src","onClick","clickPicture","Wrapper","children","Title","Counter","Shaker","shaker","friends","App","state","clickedArr","topScore","score","message","wrongGuess","shuffledArr","setState","includes","concat","picturesArr","i","length","j","Math","floor","random","this","map","friend","key","value","clicky","Component","ReactDOM","render","document","getElementById"],"mappings":"klHAgBeA,MAbf,SAAoBC,GAAQ,IACnBC,EAAcD,EAAdC,GAAIC,EAAUF,EAAVE,MAEX,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,+BAA+BC,IAAKF,EAAOD,GAAIA,EAAII,QAAS,kBAAML,EAAMM,aAAaL,S,MCF7FM,MAJf,SAAiBP,GACf,OAAO,yBAAKG,UAAU,WAAWH,EAAMQ,W,MCG1BC,MAJf,SAAeT,GACb,OAAO,wBAAIG,UAAU,SAASH,EAAMQ,W,MCGvBE,MAJf,SAAiBV,GACf,OAAO,wBAAIG,UAAU,WAAWH,EAAMQ,WCCzBG,G,MAFA,SAAAX,GAAK,OAAI,yBAAKG,WAA2B,IAAfH,EAAMY,OAAgB,SAAW,SAAUZ,EAAMa,W,OCyE3EC,E,2MAlEbC,MAAQ,CACNF,UACAG,WAAY,GACZC,SAAU,EACVC,MAAO,EACPC,QAAS,IACTC,YAAY,G,EAGdd,aAAe,SAACL,GAEd,IAAMoB,EAAc,EAAKA,YAAYR,GACrC,EAAKS,SAAS,CAAET,QAASQ,IAErB,EAAKN,MAAMC,WAAWO,SAAStB,GACjC,EAAKqB,SAAS,CAAEJ,MAAO,EAAGF,WAAY,GAAIG,QAAS,qEAAsEC,YAAY,IAErI,EAAKE,SAAS,CACZN,WAAY,EAAKD,MAAMC,WAAWQ,OAAO,CAACvB,IAC1CiB,MAAO,EAAKH,MAAMG,MAAQ,EAC1BC,QAAS,cACTC,YAAY,IAIZ,EAAKL,MAAMG,MAAQ,EAAKH,MAAME,UAChC,EAAKK,SAAS,CAAEL,SAAU,EAAKF,MAAMG,S,EAIzCG,YAAc,SAACI,GACb,IAAI,IAAIC,EAAID,EAAYE,OAAS,EAAGD,EAAI,EAAGA,IAAI,CAC7C,IAAME,EAAIC,KAAKC,MAAMD,KAAKE,UAAUL,EAAI,IADK,EAEV,CAACD,EAAYG,GAAIH,EAAYC,IAA/DD,EAAYC,GAFgC,KAE5BD,EAAYG,GAFgB,KAI/C,OAAOH,G,wEAKG,IAAD,OACX,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,oBACA,kBAAC,EAAD,gCAAiC,0BAAMtB,UAAU,SAAS6B,KAAKjB,MAAMG,MAApC,iBAAyDc,KAAKjB,MAAME,UACnG,uBAAGd,UAAU,WAAW6B,KAAKjB,MAAMI,UAErC,kBAAC,EAAD,CACAP,OAAUoB,KAAKjB,MAAMK,WACrBP,QACGmB,KAAKjB,MAAMF,QAAQoB,KAAI,SAAAC,GAAM,OAC5B,kBAAC,EAAD,CACE5B,aAAc,EAAKA,aACnBL,GAAIiC,EAAOjC,GACXkC,IAAKD,EAAOjC,GACZC,MAAOgC,EAAOhC,MACdkC,MAAOF,EAAOG,mB,GA1DRC,a,MCHlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.f3769866.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n  const{ id, image } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img className=\"img-thumbnail img-responsive\" src={image} id={id} onClick={() => props.clickPicture(id)}/>\n      </div>\n    </div>\n  );\n}\n\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Counter(props) {\r\n  return <h3 className=\"counter\">{props.children}</h3>;\r\n}\r\n\r\nexport default Counter;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Shaker = props => <div className= {props.shaker===true ? \"shaker\" : \"still\"}>{props.friends}</div>;\r\n\r\nexport default Shaker;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Counter from \"./components/Counter\";\nimport Shaker from \"./components/Shaker\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedArr: [],\n    topScore: 0,\n    score: 0,\n    message: \" \",\n    wrongGuess: false\n  };\n\n  clickPicture = (id) => {\n    //arrange images in random manner\n    const shuffledArr = this.shuffledArr(friends);\n    this.setState({ friends: shuffledArr });\n    //if clicked image already resets score and emptys array\n    if (this.state.clickedArr.includes(id)) {\n      this.setState({ score: 0, clickedArr: [], message: \"You Already Clicked That! Game Over!! Click an Image to Try Again!\", wrongGuess: true });\n    } else {\n      this.setState({\n        clickedArr: this.state.clickedArr.concat([id]),\n        score: this.state.score + 1,\n        message: \"Good Guess!\",\n        wrongGuess: false\n      });\n    }\n    //sets topscore\n    if (this.state.score > this.state.topScore) {\n      this.setState({ topScore: this.state.score });\n    }\n  }\n\n  shuffledArr = (picturesArr) => {\n    for(let i = picturesArr.length - 1; i > 0; i--){\n      const j = Math.floor(Math.random()*(i + 1));\n      [picturesArr[i], picturesArr[j]] = [picturesArr[j], picturesArr[i]];\n    }\n    return picturesArr;\n  }\n  \n\n    // Map over this.state.friends and render a FriendCard component for each friend object\n    render() {\n  return (\n    <Wrapper>\n      <Title>Memory Game</Title>\n      <Counter>Correct Guesses So Far: <span className=\"score\">{this.state.score} | Top Score: {this.state.topScore}</span>\n        <p className=\"message\">{this.state.message}</p>\n      </Counter>\n      <Shaker\n      shaker = {this.state.wrongGuess}\n      friends =\n        {this.state.friends.map(friend => (\n          <FriendCard\n            clickPicture={this.clickPicture}\n            id={friend.id}\n            key={friend.id}\n            image={friend.image}\n            value={friend.clicky}\n          />\n        ))}\n      />\n    </Wrapper>\n  );\n}\n}\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}